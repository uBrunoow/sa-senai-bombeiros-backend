# Generated by Django 4.2.6 on 2024-06-10 00:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Anamnesis",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "what_happend",
                    models.TextField(
                        blank=True,
                        help_text="O que aconteceu",
                        null=True,
                        verbose_name="O que aconteceu",
                    ),
                ),
                (
                    "happend_other_times",
                    models.BooleanField(
                        blank=True,
                        help_text="Aconteceu outras vezes",
                        null=True,
                        verbose_name="Aconteceu outras vezes",
                    ),
                ),
                (
                    "how_long_happend",
                    models.CharField(
                        blank=True,
                        help_text="Quanto tempo aconteceu",
                        max_length=100,
                        null=True,
                        verbose_name="Quanto tempo aconteceu",
                    ),
                ),
                (
                    "health_problems",
                    models.BooleanField(
                        blank=True,
                        help_text="Problemas de saúde",
                        null=True,
                        verbose_name="Problemas de saúde",
                    ),
                ),
                (
                    "health_problems_description",
                    models.TextField(
                        blank=True,
                        help_text="Descrição de problemas de saúde",
                        null=True,
                        verbose_name="Descrição de problemas de saúde",
                    ),
                ),
                (
                    "alergies",
                    models.BooleanField(
                        blank=True,
                        help_text="Alergias",
                        null=True,
                        verbose_name="Alergias",
                    ),
                ),
                (
                    "alergies_description",
                    models.TextField(
                        blank=True,
                        help_text="Descrição de alergias",
                        null=True,
                        verbose_name="Descrição de alergias",
                    ),
                ),
                (
                    "medications",
                    models.BooleanField(
                        blank=True,
                        help_text="Medicamentos",
                        null=True,
                        verbose_name="Medicamentos",
                    ),
                ),
                (
                    "medications_description",
                    models.TextField(
                        blank=True,
                        help_text="Descrição de medicamentos",
                        null=True,
                        verbose_name="Descrição de medicamentos",
                    ),
                ),
                (
                    "hour_of_last_medication",
                    models.CharField(
                        blank=True,
                        help_text="Hora da última medicação",
                        max_length=100,
                        null=True,
                        verbose_name="Hora da última medicação",
                    ),
                ),
                (
                    "drank_liquid_food",
                    models.BooleanField(
                        blank=True,
                        help_text="Líquidos e alimentos ingeridos",
                        null=True,
                        verbose_name="Líquidos e alimentos ingeridos",
                    ),
                ),
                (
                    "hour_of_last_drank_liquid_food",
                    models.CharField(
                        blank=True,
                        help_text="Hora da última ingestão de líquidos e alimentos",
                        max_length=100,
                        null=True,
                        verbose_name="Hora da última ingestão de líquidos e alimentos",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cinematic",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "behavior_desorder",
                    models.BooleanField(
                        blank=True,
                        help_text="Desordem de comportamento",
                        null=True,
                        verbose_name="Desordem de comportamento",
                    ),
                ),
                (
                    "find_with_healmet",
                    models.BooleanField(
                        blank=True,
                        help_text="Encontrado com capacete",
                        null=True,
                        verbose_name="Encontrado com capacete",
                    ),
                ),
                (
                    "find_with_seat_belt",
                    models.BooleanField(
                        blank=True,
                        help_text="Encontrado com cinto de segurança",
                        null=True,
                        verbose_name="Encontrado com cinto de segurança",
                    ),
                ),
                (
                    "walking_in_the_cene",
                    models.BooleanField(
                        blank=True,
                        help_text="Caminhando na cena",
                        null=True,
                        verbose_name="Caminhando na cena",
                    ),
                ),
                (
                    "broken_panel",
                    models.BooleanField(
                        blank=True,
                        help_text="Painel quebrado",
                        null=True,
                        verbose_name="Painel quebrado",
                    ),
                ),
                (
                    "twisted_steering_wheel",
                    models.BooleanField(
                        blank=True,
                        help_text="Volante torcido",
                        null=True,
                        verbose_name="Volante torcido",
                    ),
                ),
                (
                    "broken_windshield",
                    models.BooleanField(
                        blank=True,
                        help_text="Para-brisa quebrado",
                        null=True,
                        verbose_name="Para-brisa quebrado",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DisposableMaterials",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Material descartável",
                        max_length=100,
                        verbose_name="Material descartável",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        help_text="Tamanho",
                        max_length=100,
                        null=True,
                        verbose_name="Tamanho",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        blank=True,
                        help_text="Quantidade",
                        null=True,
                        verbose_name="Quantidade",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DrivingStyle",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Estilo de direção",
                        max_length=100,
                        verbose_name="Estilo de direção",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GestacionalAnamnesis",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "gestational_period",
                    models.CharField(
                        blank=True,
                        help_text="Período gestacional",
                        max_length=100,
                        null=True,
                        verbose_name="Período gestacional",
                    ),
                ),
                (
                    "pre_natal",
                    models.BooleanField(
                        blank=True,
                        help_text="Pré-natal",
                        null=True,
                        verbose_name="Pré-natal",
                    ),
                ),
                (
                    "complications",
                    models.BooleanField(
                        blank=True,
                        help_text="Complicações",
                        null=True,
                        verbose_name="Complicações",
                    ),
                ),
                (
                    "first_child",
                    models.BooleanField(
                        blank=True,
                        help_text="Primeira gestação",
                        null=True,
                        verbose_name="Primeira gestação",
                    ),
                ),
                (
                    "number_of_children",
                    models.IntegerField(
                        blank=True,
                        help_text="Número de filhos",
                        null=True,
                        verbose_name="Número de filhos",
                    ),
                ),
                (
                    "time_of_contractions",
                    models.CharField(
                        blank=True,
                        help_text="Que horas iniciaram as contrações",
                        max_length=100,
                        null=True,
                        verbose_name="Que horas iniciaram as contrações",
                    ),
                ),
                (
                    "duration_of_contractions",
                    models.CharField(
                        blank=True,
                        help_text="Duração das contrações",
                        max_length=100,
                        null=True,
                        verbose_name="Duração das contrações",
                    ),
                ),
                (
                    "interval_of_contractions",
                    models.CharField(
                        blank=True,
                        help_text="Intervalo das contrações",
                        max_length=100,
                        null=True,
                        verbose_name="Intervalo das contrações",
                    ),
                ),
                (
                    "pression_on_the_belly",
                    models.BooleanField(
                        blank=True,
                        help_text="Pressão na barriga",
                        null=True,
                        verbose_name="Pressão na barriga",
                    ),
                ),
                (
                    "water_rupture",
                    models.BooleanField(
                        blank=True,
                        help_text="Rompimento da bolsa",
                        null=True,
                        verbose_name="Rompimento da bolsa",
                    ),
                ),
                (
                    "visual_inspections",
                    models.BooleanField(
                        blank=True,
                        help_text="Inspeções visuais",
                        null=True,
                        verbose_name="Inspeções visuais",
                    ),
                ),
                (
                    "birth_carried_out",
                    models.BooleanField(
                        blank=True,
                        help_text="Parto realizado",
                        null=True,
                        verbose_name="Parto realizado",
                    ),
                ),
                (
                    "baby_sex",
                    models.CharField(
                        blank=True,
                        choices=[("MALE", "Masculino"), ("FEMALE", "Feminino")],
                        help_text="Sexo do bebê",
                        max_length=10,
                        null=True,
                        verbose_name="Sexo do bebê",
                    ),
                ),
                (
                    "baby_name",
                    models.CharField(
                        blank=True,
                        help_text="Nome do bebê",
                        max_length=100,
                        null=True,
                        verbose_name="Nome do bebê",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Glasgow",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "eye_opening",
                    models.IntegerField(
                        blank=True,
                        help_text="Abertura ocular",
                        null=True,
                        verbose_name="Abertura ocular",
                    ),
                ),
                (
                    "verbal_response",
                    models.IntegerField(
                        blank=True,
                        help_text="Resposta verbal",
                        null=True,
                        verbose_name="Resposta verbal",
                    ),
                ),
                (
                    "motor_response",
                    models.IntegerField(
                        blank=True,
                        help_text="Resposta motora",
                        null=True,
                        verbose_name="Resposta motora",
                    ),
                ),
                (
                    "total",
                    models.IntegerField(
                        blank=True, help_text="Total", null=True, verbose_name="Total"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GlasgowType",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Tipo de Glasgow",
                        max_length=100,
                        null=True,
                        verbose_name="Tipo de Glasgow",
                    ),
                ),
                (
                    "grater_than_five_year",
                    models.BooleanField(
                        blank=True,
                        help_text="Maior que cinco anos",
                        null=True,
                        verbose_name="Maior que cinco anos",
                    ),
                ),
                (
                    "less_than_five_year",
                    models.BooleanField(
                        blank=True,
                        help_text="Menor que cinco anos",
                        null=True,
                        verbose_name="Menor que cinco anos",
                    ),
                ),
                (
                    "eye_opening",
                    models.BooleanField(
                        blank=True,
                        help_text="Abertura ocular",
                        null=True,
                        verbose_name="Abertura ocular",
                    ),
                ),
                (
                    "verbal_response",
                    models.BooleanField(
                        blank=True,
                        help_text="Resposta verbal",
                        null=True,
                        verbose_name="Resposta verbal",
                    ),
                ),
                (
                    "motor_response",
                    models.BooleanField(
                        blank=True,
                        help_text="Resposta motora",
                        null=True,
                        verbose_name="Resposta motora",
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        blank=True, help_text="Valor", null=True, verbose_name="Valor"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HospitalMaterials",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Material hospitalar",
                        max_length=100,
                        verbose_name="Material hospitalar",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        help_text="Tamanho",
                        max_length=100,
                        null=True,
                        verbose_name="Tamanho",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        blank=True,
                        help_text="Quantidade",
                        null=True,
                        verbose_name="Quantidade",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Proceeding",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Procedimento",
                        max_length=100,
                        verbose_name="Procedimento",
                    ),
                ),
                (
                    "proceed_value",
                    models.IntegerField(
                        blank=True, help_text="Valor", null=True, verbose_name="Valor"
                    ),
                ),
                (
                    "sub_proceed",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="Filho de Procedimentos",
                        to="reports.proceeding",
                    ),
                ),
                (
                    "sub_sub_proceed",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="Filho de Filho de Procedimentos",
                        to="reports.proceeding",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceTeam",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name_m",
                    models.CharField(
                        blank=True,
                        help_text="M",
                        max_length=100,
                        null=True,
                        verbose_name="M",
                    ),
                ),
                (
                    "name_s1",
                    models.CharField(
                        blank=True,
                        help_text="S1",
                        max_length=100,
                        null=True,
                        verbose_name="S1",
                    ),
                ),
                (
                    "name_s2",
                    models.CharField(
                        blank=True,
                        help_text="S2",
                        max_length=100,
                        null=True,
                        verbose_name="S2",
                    ),
                ),
                (
                    "name_demandante",
                    models.CharField(
                        blank=True,
                        help_text="Demandante",
                        max_length=100,
                        null=True,
                        verbose_name="Demandante",
                    ),
                ),
                (
                    "name_team",
                    models.CharField(
                        blank=True,
                        help_text="Equipe",
                        max_length=100,
                        null=True,
                        verbose_name="Equipe",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransportDecision",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Decisão de transporte",
                        max_length=100,
                        verbose_name="Decisão de transporte",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransportInformations",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "number_usb",
                    models.IntegerField(
                        blank=True,
                        help_text="Número USB",
                        null=True,
                        verbose_name="Número USB",
                    ),
                ),
                (
                    "num_occurencies",
                    models.IntegerField(
                        blank=True,
                        help_text="Número de ocorrências",
                        null=True,
                        verbose_name="Número de ocorrências",
                    ),
                ),
                (
                    "desp",
                    models.CharField(
                        blank=True,
                        help_text="Despachante",
                        max_length=100,
                        null=True,
                        verbose_name="Despachante",
                    ),
                ),
                (
                    "ir_cod",
                    models.BooleanField(
                        blank=True,
                        help_text="Código IR",
                        null=True,
                        verbose_name="Código IR",
                    ),
                ),
                (
                    "ps_cod",
                    models.BooleanField(
                        blank=True,
                        help_text="Código PS",
                        null=True,
                        verbose_name="Código PS",
                    ),
                ),
                (
                    "sia_sus_cod",
                    models.BooleanField(
                        blank=True,
                        help_text="Código SIA/SUS",
                        null=True,
                        verbose_name="Código SIA/SUS",
                    ),
                ),
                (
                    "final_km",
                    models.IntegerField(
                        blank=True,
                        help_text="KM final",
                        null=True,
                        verbose_name="KM final",
                    ),
                ),
                (
                    "hch",
                    models.CharField(
                        blank=True,
                        help_text="HCH",
                        max_length=100,
                        null=True,
                        verbose_name="HCH",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TypeOfOccurrence",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Tipo de ocorrência",
                        max_length=100,
                        verbose_name="Tipo de ocorrência",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VictimWas",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Título", max_length=100, verbose_name="Título"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VitalSigns",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "heart_rate",
                    models.IntegerField(
                        blank=True,
                        help_text="Frequência cardíaca",
                        null=True,
                        verbose_name="Frequência cardíaca",
                    ),
                ),
                (
                    "respiratory_rate",
                    models.IntegerField(
                        blank=True,
                        help_text="Frequência respiratória",
                        null=True,
                        verbose_name="Frequência respiratória",
                    ),
                ),
                (
                    "blood_pressure",
                    models.IntegerField(
                        blank=True,
                        help_text="Pressão arterial",
                        null=True,
                        verbose_name="Pressão arterial",
                    ),
                ),
                (
                    "temperature",
                    models.IntegerField(
                        blank=True,
                        help_text="Temperatura",
                        null=True,
                        verbose_name="Temperatura",
                    ),
                ),
                (
                    "saturation",
                    models.IntegerField(
                        blank=True,
                        help_text="Saturação",
                        null=True,
                        verbose_name="Saturação",
                    ),
                ),
                (
                    "pulse",
                    models.IntegerField(
                        blank=True, help_text="Pulso", null=True, verbose_name="Pulso"
                    ),
                ),
                (
                    "perfusion_greater_than_two_seconds",
                    models.BooleanField(
                        blank=True,
                        help_text="Perfusão maior que dois segundos",
                        null=True,
                        verbose_name="Perfusão maior que dois segundos",
                    ),
                ),
                (
                    "perfusion_less_than_two_seconds",
                    models.BooleanField(
                        blank=True,
                        help_text="Perfusão menor que dois segundos",
                        null=True,
                        verbose_name="Perfusão menor que dois segundos",
                    ),
                ),
                (
                    "is_normal",
                    models.BooleanField(
                        blank=True, help_text="Normal", null=True, verbose_name="Normal"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SuspectProblems",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Problema do suspeito",
                        max_length=100,
                        verbose_name="Problema do suspeito",
                    ),
                ),
                (
                    "sub_problems",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="Filho de Problemas",
                        to="reports.suspectproblems",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SignsAndSymptoms",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Sinais e sintomas",
                        max_length=100,
                        verbose_name="Sinais e sintomas",
                    ),
                ),
                (
                    "sub_sub_symptoms",
                    models.ManyToManyField(
                        blank=True,
                        related_name="Filho de Filho de Sinais e Sintomas",
                        to="reports.signsandsymptoms",
                    ),
                ),
                (
                    "sub_symptoms",
                    models.ManyToManyField(
                        blank=True,
                        related_name="Filho de Sinais e Sintomas",
                        to="reports.signsandsymptoms",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("report_date", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Nome da vítima",
                        max_length=100,
                        null=True,
                        verbose_name="Nome",
                    ),
                ),
                (
                    "general_registration",
                    models.CharField(
                        blank=True,
                        help_text="Registro geral",
                        max_length=100,
                        null=True,
                        verbose_name="Registro geral",
                    ),
                ),
                (
                    "age",
                    models.IntegerField(
                        blank=True,
                        help_text="Idade da vítima",
                        null=True,
                        verbose_name="Idade",
                    ),
                ),
                (
                    "escort",
                    models.CharField(
                        blank=True,
                        help_text="Acompanhante",
                        max_length=100,
                        null=True,
                        verbose_name="Acompanhante",
                    ),
                ),
                (
                    "escort_age",
                    models.IntegerField(
                        blank=True,
                        help_text="Idade do acompanhante",
                        null=True,
                        verbose_name="Idade do acompanhante",
                    ),
                ),
                (
                    "report_place",
                    models.CharField(
                        blank=True,
                        help_text="Local do acidente",
                        max_length=100,
                        null=True,
                        verbose_name="Local do acidente",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Telefone para contato",
                        max_length=100,
                        null=True,
                        verbose_name="Telefone para contato",
                    ),
                ),
                (
                    "other_occurrence",
                    models.TextField(
                        blank=True,
                        help_text="Descrição para outros tipos de ocorrências",
                        null=True,
                        verbose_name="Outro",
                    ),
                ),
                (
                    "other_problems",
                    models.TextField(
                        blank=True,
                        help_text="Descrição para outros problemas",
                        null=True,
                        verbose_name="Outro",
                    ),
                ),
                (
                    "other_signs_and_symptoms",
                    models.TextField(
                        blank=True,
                        help_text="Descrição para outros sinais e sintomas",
                        null=True,
                        verbose_name="Outro",
                    ),
                ),
                (
                    "objects_recovered",
                    models.TextField(
                        blank=True,
                        help_text="Objetos recuperados",
                        null=True,
                        verbose_name="Objetos recuperados",
                    ),
                ),
                (
                    "other_proceeding",
                    models.TextField(
                        blank=True,
                        help_text="Descrição para outros procedimentos",
                        null=True,
                        verbose_name="Outro",
                    ),
                ),
                (
                    "observations",
                    models.TextField(
                        blank=True,
                        help_text="Observações",
                        null=True,
                        verbose_name="Observações",
                    ),
                ),
                (
                    "other_disposable_materials",
                    models.TextField(
                        blank=True,
                        help_text="Descrição para outros materiais descartáveis",
                        null=True,
                        verbose_name="Outro",
                    ),
                ),
                (
                    "quantity_other_disposable_materials",
                    models.IntegerField(
                        blank=True,
                        help_text="Quantidade de outros materiais descartáveis",
                        null=True,
                        verbose_name="Quantidade de outros materiais descartáveis",
                    ),
                ),
                (
                    "other_hospital_materials",
                    models.TextField(
                        blank=True,
                        help_text="Descrição para outros materiais hospitalares",
                        null=True,
                        verbose_name="Outro",
                    ),
                ),
                (
                    "quantity_other_materials",
                    models.IntegerField(
                        blank=True,
                        help_text="Quantidade de outros materiais hospitalares",
                        null=True,
                        verbose_name="Quantidade de outros materiais hospitalares",
                    ),
                ),
                (
                    "responsable_for_report",
                    models.CharField(
                        blank=True,
                        help_text="Responsável pelo relatório",
                        max_length=100,
                        null=True,
                        verbose_name="Responsável pelo relatório",
                    ),
                ),
                (
                    "anamnesis",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.anamnesis",
                    ),
                ),
                (
                    "cinematic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.cinematic",
                    ),
                ),
                (
                    "decision_transport",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.transportdecision",
                    ),
                ),
                (
                    "disposable_materials",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="reports",
                        to="reports.disposablematerials",
                    ),
                ),
                (
                    "driving_style",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.drivingstyle",
                    ),
                ),
                (
                    "gestacional_anamnesis",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.gestacionalanamnesis",
                    ),
                ),
                (
                    "glasgow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.glasgow",
                    ),
                ),
                (
                    "hospital_materials",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="reports",
                        to="reports.hospitalmaterials",
                    ),
                ),
                (
                    "proceeding",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="reports",
                        to="reports.proceeding",
                    ),
                ),
                (
                    "service_team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.serviceteam",
                    ),
                ),
                (
                    "signs_and_symptoms",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="reports",
                        to="reports.signsandsymptoms",
                    ),
                ),
                (
                    "suspect_problems",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="reports",
                        to="reports.suspectproblems",
                    ),
                ),
                (
                    "transport_informations",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.transportinformations",
                    ),
                ),
                (
                    "type_of_occurrences",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="reports",
                        to="reports.typeofoccurrence",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="news_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "victim_was",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.victimwas",
                    ),
                ),
                (
                    "vital_signs",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="reports.vitalsigns",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
